from Tkinter import *
import serial
import cv2
import numpy as np
import math
import os
import time
class Application(Frame):

  
    def __init__(self,master):
        Frame.__init__(self,master)
        self.grid()
        self.create_widgets()

    def create_widgets(self):


        self.instruction = Label(self,
            font= "Helvetica 11 bold",
            text="Enter the password")
         self.instruction.grid(row=0,column=0,columnspan=1,sticky=E)

        self.password = Entry(self)
        self.password.grid(row=0,column=1,sticky=W)

        self.submit_button= Button(self,
            text        ="submit",width = 10,
            height     = 1,
            bg        = '#%x%x%x'%(96,151,225),
            bd             = 2,
            relief         = "raised",
            font           = "Helvetica 12 bold",
            fg             = "white", command=self.reveal)
        self.submit_button.grid(row=2,column=0,sticky=W)

        self.text = Text(self,width=15,height=2,wrap=WORD)
        self.text.grid(row=2,column=1,columnspan=2,sticky=W)

 self.submit_button= Button(self,
            text        ="submit",width = 10,
            height     = 1,
            bg        = '#%x%x%x'%(96,151,225),
            bd             = 2,
            relief         = "raised",
            font           = "Helvetica 12 bold",
            fg             = "white", command=self.reveal)
        self.submit_button.grid(row=2,column=0,sticky=W)

        self.text = Text(self,width=15,height=2,wrap=WORD)
        self.text.grid(row=2,column=1,columnspan=2,sticky=W)


    def reveal(self):


        content=self.password.get()
        if content == "1234":
            message = "Won"
            self.image()
        else:

            message = "Acess denied"
        self.text.delete(0.0,END)

        self.text.insert(0.0, message)

    def image(self):
        portname = "/dev/ttyUSB0"
        serial_port= serial.Serial(portname,9600,timeout =1)

        cap = cv2.VideoCapture(0)
        while(cap.isOpened()):
                ret, img = cap.read()
                cv2.rectangle(img,(300,300),(100,100),(0,255,0),0)
                crop_img = img[100:300, 100:300]
                grey = cv2.cvtColor(crop_img, cv2.COLOR_BGR2GRAY)
                value = (35, 35)
                blurred = cv2.GaussianBlur(grey, value, 0)
                _, thresh1 = cv2.threshold(blurred, 127, 255,
                                   cv2.THRESH_BINARY_INV+cv2.THRESH_OTSU)
                cv2.imshow('Thresholded', thresh1)

   
